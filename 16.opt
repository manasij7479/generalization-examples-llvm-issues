; https://github.com/llvm/llvm-project/issues/60173
; Success
; x + (C_4 = (C_2 \: \& \: (C_3 + x)) \: ?\: C_1 : C_3) \Rightarrow C_4 = (C_2 \: \& \: (C_3 + x)) \: ? : C_1 + x : C_3 + x

%n:i32 = var
%notneg = add %n, 1
%rem = and %notneg, 3
%cmp = eq %rem, 0
%condv = select %cmp, -2, 1:i32
%cond = add %condv, %n
infer %cond
%sub = add %n, -2
%condv_ = select %cmp, %sub, %notneg
result %condv_


;	Input (profit=0):

;n:i32 + (select (((n + 1) & 3) == 0) 0xFFFFFFFE 1)
;  =>
;select (((n + 1) & 3) == 0) (n + 0xFFFFFFFE) (n + 1)

;	Generalized (profit=0):

;n + (select (C4 == (C2 & (C3 + n))) C1 C3)
;  =>
;select (C4 == (C2 & (C3 + n))) (C1 + n) (C3 + n)

;SUCCESS